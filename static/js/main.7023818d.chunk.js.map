{"version":3,"sources":["components/title.js","components/SearchForm.js","components/Movie.js","components/MoviesList.js","pages/Home.js","components/ButtonBackToHome.js","pages/Detail.js","pages/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["Title","_ref","children","react_default","a","createElement","className","API_KEY","SearchForm","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","state","inputMovie","_handleMovie","e","setState","target","value","_handleSubmit","preventDefault","fetch","then","res","json","results","_results$Search","Search","_results$totalResults","totalResults","console","log","props","onResults","inherits","createClass","key","onSubmit","onChange","type","placeholder","Component","Movie","_this$props","id","poster","title","year","Link","to","src","alt","MoviesList","movies","map","movie","imdbID","Movie_Movie","Year","Poster","Home","usedSearch","_handleResults","MoviesList_MoviesList","title_Title","SearchForm_SearchForm","_renderResults","ButtonBackToHome","Detail","_this2","match","params","_fetchMovie","_this$state$movie","Actors","Metascore","Plot","ButtonBackToHome_ButtonBackToHome","NotFound","App","Switch","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","BrowserRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7023818d.chunk.js","sourcesContent":["import React from 'react'\n\nexport const Title = ({children}) => (\n    <h1 className=\"title\">{children}</h1>\n)\n","import React, {Component} from 'react'\n\nconst API_KEY = '544a5c64'\nexport class SearchForm extends Component{\n    state = {\n        inputMovie: ''\n    }\n    _handleMovie = (e) =>{\n        this.setState({inputMovie: e.target.value})\n    }\n    _handleSubmit = (e) => {\n        e.preventDefault()\n        const { inputMovie } = this.state\n        fetch(`http://www.omdbapi.com/?s=${inputMovie}&apikey=${API_KEY}`)\n            .then(res => res.json())\n            .then(results => {\n                const { Search = [], totalResults = 0 } = results\n                console.log({Search,totalResults})\n                this.props.onResults(Search)\n            })\n    }\n    render(){\n        return(\n            <form onSubmit={this._handleSubmit}>\n                <div className=\"field has-addons\">\n                    <div className=\"control\">\n                        <input\n                         className=\"input\"\n                         onChange={this._handleMovie}\n                         type=\"text\" placeholder=\"Search your movie\" />\n                    </div>\n                    <div className=\"control\">\n                        <button className=\"button is-info\">\n                        Search\n                        </button>\n                    </div>\n                </div>\n            </form>\n        )\n    }\n}\n","import React, {Component} from 'react'\nimport PropTypes from 'prop-types'\n\nimport { Link } from 'react-router-dom'\n\nexport class Movie extends Component{\n    static propTypes = {\n        id: PropTypes.string,\n        title: PropTypes.string,\n        year: PropTypes.string,\n        poster: PropTypes.string\n    }\n\n    render(){\n        const{ id,poster, title, year } = this.props\n\n        return(\n            <Link to={`/detail/${id}`} className=\"card\">\n              <div className=\"card-image\">\n                <figure className=\"image\">\n                  <img src={poster} alt={title} />\n                </figure>\n              </div>\n              <div className=\"card-content\">\n                <div className=\"media\">\n                  <div className=\"media-content\">\n                    <p className=\"title is-4\">{title}</p>\n                    <p className=\"subtitle is-6\">{year}</p>\n                  </div>\n                </div>\n              </div>\n          </Link>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { Movie } from './Movie'\n\nexport class MoviesList extends Component {\n  static propTypes = {\n    movies: PropTypes.array\n  }\n\n  render () {\n    const { movies } = this.props\n    return (\n      <div className='MoviesList'>\n        {\n          movies.map(movie => {\n            return (\n              <div key={movie.imdbID} className='MoviesList-item'>\n                <Movie\n                  id={movie.imdbID}\n                  title={movie.Title}\n                  year={movie.Year}\n                  poster={movie.Poster}\n                />\n              </div>\n            )\n          })\n        }\n      </div>\n    )\n  }\n}\n","import React, {Component} from 'react'\n\nimport { Title } from '../components/title'\nimport { SearchForm } from '../components/SearchForm'\nimport { MoviesList } from '../components/MoviesList'\n\nexport class Home extends Component{\n    state = { usedSearch: false ,results: [] }\n    _handleResults = (results) =>{\n        this.setState({ results , usedSearch: true })\n    }\n    _renderResults(){\n        return this.state.results.length === 0\n            ? <p>Sin Respuesta</p>\n            : <MoviesList movies={this.state.results} />\n    }\n    render(){\n        return(\n            <div>\n                <Title>Search movies</Title>\n                <div className='SearchForm-wrapper'>\n                    <SearchForm onResults={this._handleResults}/>\n                </div>\n                {this.state.usedSearch\n                    ? this._renderResults()\n                    : <small>Search your favorite movie</small>\n                }\n            </div>\n        )\n    }\n}\n","import React, {Component} from 'react'\nimport { Link } from 'react-router-dom'\n\nexport class ButtonBackToHome extends Component{\n    render(){\n        return(\n            <Link to={'/'} className='button is-info'>\n                Back to home\n            </Link>\n        )\n    }\n}\n","import React, {Component} from 'react'\nimport PropTypes from 'prop-types'\nimport { ButtonBackToHome } from '../components/ButtonBackToHome'\n\nconst API_KEY = '544a5c64'\n\nexport class Detail extends Component{\n    static propTypes ={\n        match: PropTypes.shape({\n            params: PropTypes.object,\n            isExact: PropTypes.bool,\n            path: PropTypes.string,\n            url: PropTypes.string\n        })\n    }\n    state = {\n        movie: {}\n    }\n\n    _fetchMovie({ id }){\n        fetch(`http://www.omdbapi.com/?i=${id}&apikey=${API_KEY}`)\n            .then(res => res.json())\n            .then(movie => {\n                console.log({ movie })\n                this.setState( {movie} )\n            })\n    }\n\n    componentDidMount(){\n        console.log(this.props)\n        const { id } = this.props.match.params\n        this._fetchMovie({ id })\n    }\n\n    render(){\n        const { Title, Poster, Actors, Metascore, Plot } = this.state.movie\n        return (\n            <div className='detail'>\n                <ButtonBackToHome />\n                <h1>{Title}</h1>\n                <img src={Poster} />\n                <h3>{Actors}</h3>\n                <span>{Metascore}</span>\n                <p>{Plot}</p>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { ButtonBackToHome } from '../components/ButtonBackToHome'\n\nexport class NotFound extends Component{\n    render(){\n        return(\n            <div>\n                <h1 className='title'>404!</h1>\n                <h2 className='subtitle'>\n                    The page not found\n                </h2>\n                <ButtonBackToHome />\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport { Switch, Route } from 'react-router-dom'\n\nimport { Home } from './pages/Home'\nimport { Detail } from './pages/Detail'\nimport { NotFound } from './pages/NotFound'\n\nimport './App.css';\nimport 'bulma/css/bulma.css';\n\nclass App extends Component {\n  render() {\n    return (\n        <div className=\"App\">\n            <Switch>\n                <Route exact path='/search-movies/' component={Home} />\n                <Route path='/detail/:id' component={Detail} />\n                <Route component={NotFound} />\n            </Switch>\n        </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}